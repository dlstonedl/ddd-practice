@startuml

class ParkingManager {
  List<ParkingBoy> parkingBoys

  + ParkingLot selectParkingLot()
}

ParkingManager "1" o--> "0...many" ParkingBoy

class ParkingBoy << Entity >> {
  ParkingBoyId id
  List<ParkingLot> parkingLots

  ParkingLot selectParkingLot()
  boolean available()

  + void setParkingLots (List<ParkingLot> parkingLots)
  + List<ParkingLot> getParkingLots()
}

interface Strategy {
  ParkingLot selectParkingLot(List<ParkingLot> parkingLots)
}
class SortedStrategy
class MaxIdleStrategy
Strategy <|.. SortedStrategy
Strategy <|.. MaxIdleStrategy
ParkingBoy -> Strategy

class ParkingLot << Entity >> {
  ParkingLotId id
  int capacity
  Map <Ticket, Car> parkedCars

  + Ticket park(Car car)
  + Car take(Ticket ticket)
  + boolean available()
}

Class Car << Value Object >> {
    CarId id
}

Class Ticket << Value Object >> {
}

Ticket "1" --> "1" Car
ParkingLot "1" o--> "0..many" Ticket
ParkingBoy "1" o--> "0..many" ParkingLot

@enduml
